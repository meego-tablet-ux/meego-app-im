/*
 * This file was generated by qdbusxml2cpp version 0.7
 * Command line was: qdbusxml2cpp Debug.xml -c DebugProxy -p debugproxy -i debugmessage.h
 *
 * qdbusxml2cpp is Copyright (C) 2011 Nokia Corporation and/or its subsidiary(-ies).
 *
 * This is an auto-generated file.
 * Do not edit! All changes made to it will be lost.
 */

#ifndef DEBUGPROXY_H_1305855226
#define DEBUGPROXY_H_1305855226

#include <QtCore/QObject>
#include <QtCore/QByteArray>
#include <QtCore/QList>
#include <QtCore/QMap>
#include <QtCore/QString>
#include <QtCore/QStringList>
#include <QtCore/QVariant>
#include <QtDBus/QtDBus>
#include "debugmessage.h"

/*
 * Proxy class for interface org.freedesktop.Telepathy.Debug
 */
class DebugProxy: public QDBusAbstractInterface
{
    Q_OBJECT
public:
    static inline const char *staticInterfaceName()
    { return "org.freedesktop.Telepathy.Debug"; }

public:
    DebugProxy(const QString &service, const QString &path, const QDBusConnection &connection, QObject *parent = 0);

    ~DebugProxy();

    Q_PROPERTY(bool Enabled READ enabled WRITE setEnabled)
    inline bool enabled() const
    { return qvariant_cast< bool >(property("Enabled")); }
    inline void setEnabled(bool value)
    { setProperty("Enabled", qVariantFromValue(value)); }

public Q_SLOTS: // METHODS
    inline QDBusPendingReply<DebugMessageList> GetMessages()
    {
        QList<QVariant> argumentList;
        return asyncCallWithArgumentList(QLatin1String("GetMessages"), argumentList);
    }

Q_SIGNALS: // SIGNALS
    void NewDebugMessage(double time, const QString &domain, uint level, const QString &message);
};

namespace org {
  namespace freedesktop {
    namespace Telepathy {
      typedef ::DebugProxy Debug;
    }
  }
}
#endif
